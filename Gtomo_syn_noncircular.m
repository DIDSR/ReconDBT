
function Gt = Gtomo_syn_noncircular(src_vec,ig, detector_geom, viewoffset)
%function Gt = Gtomo_syn_noncircular(src_vec,ig, detector_geom, viewoffset)
%Generate the non-circular DBT forward projection operator corresponding to 'btg' and 'ig',
%the tomosynthesis geometry and the object geometry, respectively
%
%Inputs:
%   src_vec: contains the x-ray source coordinates corresponding to each 
%       projection view. It is a nax3 array, where na is the number of
%       views
%   ig: object (image) geometry, generated by using "image_geom()" in the 
%       IRT package.
%   detector_geom: a structure describes the detector geometry.
%   viewoffset: the projection view offset relative to the detector center
%       in pixels.
%
%outputs: 
%   Gt: a cell array containing the forward projectors for all projection
%   views, each Gt{i} is generated by using "Gcone()" in the IRT package.
%
% Author: Rongping Zeng, FDA/CDRH/OSEL/DIDSR, 
% Contact: rongping.zeng@fda.hhs.gov
% Feb. 2018

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
%                       Legal Disclaimer
% This software and documentation (the "Software") were developed at the 
% Food and Drug Administration (FDA) by employees of the Federal Government 
% in the course of their official duties. Pursuant to Title 17, Section 105
% of the United States Code, this work is not subject to copyright protection
% and is in the public domain. Permission is hereby granted, free of charge, 
% to any person obtaining a copy of the Software, to deal in the Software 
% without restriction, including without limitation the rights to use, copy, 
% modify, merge, publish, distribute, sublicense, or sell copies of the 
% Software or derivatives, and to permit persons to whom the Software is 
% furnished to do so. FDA assumes no responsibility whatsoever for use by 
% other parties of the Software, its source code, documentation or compiled 
% executables, and makes no guarantees, expressed or implied, about its 
% quality, reliability, or any other characteristic. Further, use of this 
% code in no way implies endorsement by the FDA or confers any advantage in 
% regulatory decisions. Although this software can be redistributed and/or 
% modified freely, we ask that any derivative works bear some notice that 
% they are derived from it, and any modified versions bear some notice that 
% they have been modified.
%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

dod=0;%cm
nview=size(src_vec,1);

ns = detector_geom.ns; % # of detector elements in width
nt = detector_geom.nt; % # of detector elements in depth 
ds = detector_geom.ds; %pixel resolutions in length unit
dt = detector_geom.dt;

Gt=cell(1,nview);
for i=1:nview
    src=src_vec(i,:);
    %the corresponding object geometry
    xoffset_vi(i) = ig.offset_x + src(1)/ig.dx;
    yoffset_vi(i) = ig.offset_y - src(2)/(-ig.dy); %dy is negtive in image_geom().
    zoffset_vi(i) = ig.offset_z + dod/ig.dz;
    ig_vi = image_geom('nx', ig.nx, 'ny', ig.nz, 'nz', ig.ny, 'dx', ig.dx, 'dy',ig.dz, 'dz', ig.dy,...%defautly dy=-dx
         'offset_x',xoffset_vi(i), 'offset_y',ig.offset_z, 'offset_z',yoffset_vi(i), 'down', 1,'mask', permute(ig.mask,[1 3 2]));

    %the corresponding CT geometry
    na=1;
    %orbit_start=theta(i);
    
    dsd=abs(src(3));
    dso=dsd-dod;
    

    soffset_vi(i) = viewoffset(1) + src(1)/ds;
    toffset_vi(i) = viewoffset(2) -src(2)/dt;
   
    cg_vi = ct_geom('fan', 'ns', ns, 'nt', nt, 'na', na, ...
        'ds', ds, ...%'dt', dv, ... defautly dt = -ds;
        'dt',-dt,...
        'down', 1, ...
     ...%   'orbit', orbit,...
        'orbit_start',0,...
        'offset_s', soffset_vi(i), ... % quarter detector
        'offset_t', toffset_vi(i), ...
        'dso', dso, 'dsd', dsd, ...
        'dfs',inf); %flat detector

   
   Gt{i}=Gcone(cg_vi,ig_vi,'nthread',1);
end
   
